/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMoonshotFactory,
  IMoonshotFactoryInterface,
} from "../../../contracts/interfaces/IMoonshotFactory";

const _abi = [
  {
    inputs: [],
    name: "FailedToSendETH",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "NotReadyForMigration",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureIsUsed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curvePositionAfterTrade",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curveProgressBps",
        type: "uint256",
      },
    ],
    name: "BuyExactIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curvePositionAfterTrade",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refund",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curveProgressBps",
        type: "uint256",
      },
    ],
    name: "BuyExactOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "MarketcapReached",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensToMigrate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensToBurn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralToMigrate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "migrationFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "Migrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "NewMoonshotToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curveProgressBps",
        type: "uint256",
      },
    ],
    name: "NewMoonshotTokenAndBuy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curvePositionAfterTrade",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curveProgressBps",
        type: "uint256",
      },
    ],
    name: "SellExactIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curvePositionAfterTrade",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "curveProgressBps",
        type: "uint256",
      },
    ],
    name: "SellExactOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "virtualTokenReserves",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "virtualCollateralReserves",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeBasisPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dexFeeBasisPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "migrationFeeFixed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolCreationFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mcUpperLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mcLowerLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensMigrationThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dexTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "uniswapV2Router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SetConfig",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
    ],
    name: "buyExactIn",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCollateralAmount",
        type: "uint256",
      },
    ],
    name: "buyExactOut",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "createMoonshotToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenAmountMin",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "createMoonshotTokenAndBuy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountCollateralMin",
        type: "uint256",
      },
    ],
    name: "sellExactIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmountMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountCollateral",
        type: "uint256",
      },
    ],
    name: "sellExactOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_virtualTokenReserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_virtualCollateralReserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeBasisPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dexFeeBasisPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_migrationFeeFixed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_poolCreationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mcUpperLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mcLowerLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensMigrationThreshold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dexTreasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapV2Router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMoonshotFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IMoonshotFactoryInterface {
    return new Interface(_abi) as IMoonshotFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMoonshotFactory {
    return new Contract(address, _abi, runner) as unknown as IMoonshotFactory;
  }
}
