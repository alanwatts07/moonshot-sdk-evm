/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMoonshotToken,
  IMoonshotTokenInterface,
} from "../../../contracts/interfaces/IMoonshotToken";

const _abi = [
  {
    inputs: [],
    name: "FailedToSendETH",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientTokenReserves",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketcapThresholdReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughETHReserves",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughtETHToBuyTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "SendingToPairIsNotAllowedBeforeMigration",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageCheckFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TradingStopped",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
    ],
    name: "buyExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralToPayWithFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "helioFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCollateralAmount",
        type: "uint256",
      },
    ],
    name: "buyExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralToPayWithFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "helioFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveOut",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_paymentTokenIsOut",
        type: "bool",
      },
    ],
    name: "getAmountInAndFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveOut",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_paymentTokenIsIn",
        type: "bool",
      },
    ],
    name: "getAmountOutAndFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurveProgressBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensToMigrate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensToBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
    ],
    name: "sellExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralToReceiveMinusFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "helioFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenAmountMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountCollateral",
        type: "uint256",
      },
    ],
    name: "sellExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralToReceiveMinusFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "helioFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dexFee",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMoonshotToken__factory {
  static readonly abi = _abi;
  static createInterface(): IMoonshotTokenInterface {
    return new Interface(_abi) as IMoonshotTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMoonshotToken {
    return new Contract(address, _abi, runner) as unknown as IMoonshotToken;
  }
}
